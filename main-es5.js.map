{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_alert/alert.component.ts","webpack:///src/app/_alert/alert.component.html","webpack:///src/app/_alert/alert.model.ts","webpack:///src/app/_alert/alert.module.ts","webpack:///src/app/_alert/alert.service.ts","webpack:///src/app/_alert/index.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/main/main.component.html","webpack:///src/app/main/main.component.ts","webpack:///src/app/result.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AlertComponent","alertService","alerts","subscription","onAlert","subscribe","alert","message","push","unsubscribe","filter","x","type","Success","Info","Warning","selector","templateUrl","styleUrls","Alert","init","Object","assign","AlertType","AlertModule","imports","declarations","AlertService","router","subject","keepAfterRouteChange","events","event","clear","alertId","asObservable","pipe","next","providedIn","routes","path","component","AppRoutingModule","forRoot","AppComponent","title","AppModule","providers","bootstrap","MainComponent","httpClient","sanitizer","userchoice","hide_switch","hide_training_session","hide_testing_session","hide_save_session","src_video_path1","src_video_path2","start_button_disable","file_index","save_result","GenderControl","required","choices","name","age","gender","chosen_file","recorded_result","user_file_index","Math","floor","random","user_file_path","console","log","get","data","orders","first_A","second_B","choice","jsonData","JSON","stringify","uri","encodeURIComponent","bypassSecurityTrustUrl","FinishTraining","StartTest","JumpTo","result","result_all","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Alert, AlertType } from './alert.model';\nimport { AlertService } from './alert.service';\n\n@Component({ selector: 'alert', templateUrl: 'alert.component.html', styleUrls: ['./alert.component.css'] })\nexport class AlertComponent implements OnInit, OnDestroy {\n    @Input() id: string;\n\n    alerts: Alert[] = [];\n    subscription: Subscription;\n\n    constructor(private alertService: AlertService) { }\n\n    ngOnInit() {\n        this.subscription = this.alertService.onAlert(this.id)\n            .subscribe(alert => {\n                if (!alert.message) {\n                    // clear alerts when an empty alert is received\n                    this.alerts = [];\n                    return;\n                }\n\n                // add alert to array\n                this.alerts.push(alert);\n            });\n    }\n\n    ngOnDestroy() {\n        // unsubscribe to avoid memory leaks\n        this.subscription.unsubscribe();\n    }\n\n    removeAlert(alert: Alert) {\n        // remove specified alert from array\n        this.alerts = this.alerts.filter(x => x !== alert);\n    }\n\n    cssClass(alert: Alert) {\n        if (!alert) {\n            return;\n        }\n\n        // return css class based on alert type\n        switch (alert.type) {\n            case AlertType.Success:\n                return 'alert alert-success';\n            case AlertType.Error:\n                return 'alert alert-danger';\n            case AlertType.Info:\n                return 'alert alert-info';\n            case AlertType.Warning:\n                return 'alert alert-warning';\n        }\n    }\n}","<div *ngFor=\"let alert of alerts\" class=\"{{cssClass(alert)}} alert-dismissable\" style=\"width:200px; height:50px; text-align:center; margin:auto\">\n    {{alert.message}}\n    <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\n</div>","export class Alert {\n    type: AlertType;\n    message: string;\n    alertId: string;\n    keepAfterRouteChange: boolean;\n\n    constructor(init?:Partial<Alert>) {\n        Object.assign(this, init);\n    }\n}\n\nexport enum AlertType {\n    Success,\n    Error,\n    Info,\n    Warning\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AlertComponent } from './alert.component';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [AlertComponent],\n    exports: [AlertComponent]\n})\nexport class AlertModule { }","import { Injectable } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { Alert, AlertType } from './alert.model';\n\n@Injectable({ providedIn: 'root' })\nexport class AlertService {\n    private subject = new Subject<Alert>();\n    private keepAfterRouteChange = false;\n\n    constructor(private router: Router) {\n        // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\n        this.router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                if (this.keepAfterRouteChange) {\n                    // only keep for a single route change\n                    this.keepAfterRouteChange = false;\n                } else {\n                    // clear alert messages\n                    this.clear();\n                }\n            }\n        });\n    }\n\n    // enable subscribing to alerts observable\n    onAlert(alertId?: string): Observable<Alert> {\n        return this.subject.asObservable().pipe(filter(x => x && x.alertId === alertId));\n    }\n\n    // convenience methods\n    success(message: string, alertId?: string) {\n        this.alert(new Alert({ message, type: AlertType.Success, alertId }));\n    }\n\n    error(message: string, alertId?: string) {\n        this.alert(new Alert({ message, type: AlertType.Error, alertId }));\n    }\n\n    info(message: string, alertId?: string) {\n        this.alert(new Alert({ message, type: AlertType.Info, alertId }));\n    }\n\n    warn(message: string, alertId?: string) {\n        this.alert(new Alert({ message, type: AlertType.Warning, alertId }));\n    }\n\n    // main alert method    \n    alert(alert: Alert) {\n        this.keepAfterRouteChange = alert.keepAfterRouteChange;\n        this.subject.next(alert);\n    }\n\n    // clear alerts\n    clear(alertId?: string) {\n        this.subject.next(new Alert({ alertId }));\n    }\n}","export * from './alert.module';\nexport * from './alert.service';\nexport * from './alert.model';\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MainComponent } from './main/main.component';\n\n\n\nconst routes: Routes = [\n  { path: '' , component: MainComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'gui-test';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './main/main.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AlertModule } from './_alert';\n\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MatVideoModule } from 'mat-video';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    AlertModule,\n    MatGridListModule,\n    MatRadioModule,\n    FormsModule,\n    MatButtonModule,\n    HttpClientModule,\n    MatInputModule,\n    MatSelectModule,\n    MatVideoModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"form-group\">\n    <h1 class=\"title\">Subjective Experiment for Point Cloud Quality</h1>\n    <br>\n    <div [hidden]=\"hide_training_session\">\n        <h2 class=\"Subtitle\">Personal Information:</h2>\n        <div style=\"text-align: center;\">\n            \n            <mat-form-field class=\"example-full-width\">\n                <mat-label>Your name:</mat-label>\n                <input matInput type=\"text\" [(ngModel)]=\"save_result.name\">\n            </mat-form-field>\n            \n            \n            <mat-form-field class=\"example-full-width\">\n                <mat-label>Your age:</mat-label>\n                <input matInput type=\"number\" [(ngModel)]=\"save_result.age\">\n            </mat-form-field>\n            \n            \n                <mat-form-field>\n                    <mat-label>Your Gender:</mat-label>\n                    <mat-select [formControl]=\"GenderControl\" required [(value)]=\"save_result.gender\">\n                      <mat-option>--</mat-option>\n                      <mat-option value=\"option1\">Male</mat-option>\n                      <mat-option value=\"option2\">Female</mat-option>\n                      <mat-option value=\"option3\">Decline to answer</mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"GenderControl.hasError('required')\">Please make a choice</mat-error>\n                </mat-form-field>\n                <!--<p>You selected: {{save_result.gender}}</p>-->\n            \n        </div>\n    <br>\n    <h2 class=\"Subtitle\">Training Session</h2>\n    <mat-grid-list cols=\"2\" rowHeight=\"2:2\">\n\n        <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n            <div>\n                <div class=\"SmallTitle\">A:</div>\n                <video src=\"../assets/videos/redandblack_40_after.mp4\" controls muted autoplay loop playsinline></video>\n                <!--<embed src=\"../assets/videos/redandblack_40_after.mp4\" autostart=\"false\"/>-->\n                <!--<img src=\"../assets/videos/redandblack_40_after.mp4\">-->\n            </div>\n        </mat-grid-tile>\n        <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n            <div>\n                <div class=\"SmallTitle\">B:</div>\n                <video src=\"../assets/videos/redandblack_40.mp4\" controls muted autoplay loop playsinline></video>\n            <!--<img src=\"../assets/videos/redandblack_40.mp4\">-->\n            </div>\n        </mat-grid-tile>\n\n        \n    </mat-grid-list>\n    <h2 class=\"Subtitle\">\n        A has much better quality than B.\n    </h2>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <mat-grid-list cols=\"2\" rowHeight=\"2:2\">\n\n        <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n            <div>\n                <div class=\"SmallTitle\">A:</div>\n                <video src=\"../assets/videos/redandblack_30_after.mp4\" muted autoplay loop playsinline></video>\n                <!--<img src=\"../assets/videos/redandblack_30_after.mp4\">-->\n            </div>\n        </mat-grid-tile>\n        <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n            <div>\n                <div class=\"SmallTitle\">B:</div>\n                <video src=\"../assets/videos/redandblack_30.mp4\" muted autoplay loop playsinline></video>\n            <!--<img src=\"../assets/videos/redandblack_30.mp4\">-->\n            </div>\n        </mat-grid-tile>\n\n        \n    </mat-grid-list>\n    <h2 class=\"Subtitle\">\n        A has a little better quality than B.\n    </h2>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <mat-grid-list cols=\"2\" rowHeight=\"2:2\">\n\n        <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n            <div>\n                <div class=\"SmallTitle\">A:</div>\n                <video src=\"../assets/videos/redandblack_20_after.mp4\" muted autoplay loop playsinline></video>\n                <!--<img src=\"../assets/videos/redandblack_20_after.mp4\">-->\n            </div>\n        </mat-grid-tile>\n        <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n            <div>\n                <div class=\"SmallTitle\">B:</div>\n                <video src=\"../assets/videos/redandblack_20.mp4\" muted autoplay loop playsinline></video>\n            <!--<img src=\"../assets/videos/redandblack_20.mp4\">-->\n            </div>\n        </mat-grid-tile>\n\n        \n    </mat-grid-list>\n    <h2 class=\"Subtitle\">\n        A and B have similar quality.\n    </h2>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <mat-grid-list cols=\"2\" rowHeight=\"2:2\">\n\n        <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n            <div>\n                <div class=\"SmallTitle\">A:</div>\n                <video src=\"../assets/videos/redandblack_30.mp4\" muted autoplay loop playsinline></video>\n                <!--<img src=\"../assets/videos/redandblack_30.mp4\">-->\n            </div>\n        </mat-grid-tile>\n        <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n            <div>\n                <div class=\"SmallTitle\">B:</div>\n                <video src=\"../assets/videos/redandblack_30_after.mp4\" muted autoplay loop playsinline></video>\n            <!--<img src=\"../assets/videos/redandblack_30_after.mp4\">-->\n            </div>\n        </mat-grid-tile>\n\n        \n    </mat-grid-list>\n    <h2 class=\"Subtitle\">\n        A has a little worse quality than B.\n    </h2>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <br>\n    <mat-grid-list cols=\"2\" rowHeight=\"2:2\">\n\n        <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n            <div>\n                <div class=\"SmallTitle\">A:</div>\n                <video src=\"../assets/videos/redandblack_40.mp4\" muted autoplay loop playsinline></video>\n                <!--<img src=\"../assets/videos/redandblack_40.mp4\">-->\n            </div>\n        </mat-grid-tile>\n        <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n            <div>\n                <div class=\"SmallTitle\">B:</div>\n                <video src=\"../assets/videos/redandblack_40_after.mp4\" muted autoplay loop playsinline></video>\n            <!--<img src=\"../assets/videos/redandblack_40_after.mp4\">-->\n            </div>\n        </mat-grid-tile>\n\n        \n    </mat-grid-list>\n    <h2 class=\"Subtitle\">\n        A has much worse quality than B.\n    </h2>\n    \n    <div style=\"text-align: center;\">\n    <button mat-stroked-button color=\"primary\" (click)=\"FinishTraining()\">Finish Training</button>\n    </div>\n    <div>\n        <br>\n    </div>\n    </div>\n    <div [hidden]=\"hide_testing_session\">\n    <mat-grid-list cols=\"9\" rowHeight=\"1:4\">\n\n        <mat-grid-tile [colspan]=\"4\">\n            <div>\n                <div class=\"SmallTitle\">A:</div>\n                <!--<mat-video [src]=\"src_video_path1\"></mat-video>-->\n                <video [src]=\"src_video_path1\" muted autoplay loop playsinline></video>\n                <!--<img [src]=\"src_video_path1\">-->\n            </div>\n        </mat-grid-tile>\n        <mat-grid-tile [colspan]=\"4\">\n            <div>\n                <div class=\"SmallTitle\">B:</div>\n                <!--<mat-video [src]=\"src_video_path1\"></mat-video>-->\n                <video [src]=\"src_video_path2\" muted autoplay loop playsinline></video>\n            <!--<img [src]=\"src_video_path2\">-->\n            </div>\n        </mat-grid-tile>\n    \n        <mat-grid-tile [colspan]=\"1\">\n            <div>\n                <button mat-stroked-button color=\"primary\" (click)=\"StartTest()\" [disabled]=\"start_button_disable\">Start Test</button>\n                <div id=\"example-radio-group-label\">Make your choice:</div>\n                <div>\n                    <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\" [(ngModel)]=\"userchoice\">\n                        <mat-radio-button class=\"example-radio-button\" *ngFor=\"let choice of choices\" [value]=\"choice\">\n                            {{choice}}\n                        </mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <!--<div>Your choice is: </div>-->\n                <!--<div>{{userchoice}}</div>-->\n                <div [hidden]=\"hide_switch\" style=\"color:red\"> Please make a choice</div>\n                <button mat-stroked-button color=\"primary\" (click)=\"JumpTo()\" [disabled]=\"!start_button_disable\">Submit</button>\n                <!--<div>{{user_file_index}}</div>-->\n            </div>\n        </mat-grid-tile>\n    </mat-grid-list>\n    </div>\n    <div [hidden]=\"hide_save_session\" style=\"text-align: center;\">\n        <h1>You've finished the experiment! Thank you very much!</h1>\n        <h2>Please download the file and send it as attachment to k5cao@eng.ucsd.edu</h2>\n        <a download=\"my-json-object.json\" [href]=\"dataUri\">\n            <button>Download</button>\n        </a>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { result, result_all } from \"../result\";\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport {FormControl, Validators} from '@angular/forms';\n\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\n\nexport class MainComponent implements OnInit {\n\n  constructor(private httpClient: HttpClient, private sanitizer: DomSanitizer) { }\n\n  userchoice: string=\"\";\n  hide_switch: boolean = true;\n  hide_training_session: boolean = false;\n  hide_testing_session: boolean = true;\n  hide_save_session: boolean = true;\n  src_video_path1: string=\"\";\n  src_video_path2: string=\"\";\n  user_file_index: number;\n  user_file_path: string;\n  start_button_disable: boolean = false;\n  orders: any;\n  file_index: number=0;\n  save_result: result_all=new result_all();\n  GenderControl = new FormControl('', Validators.required);\n  choices: string[] = ['A is lot better than B', 'A is a little better than B', 'A and B are similar', 'A is a little worse than B', 'A is a lot worse than B'];\n\n\n  ngOnInit(): void {\n    this.save_result.name = \"\";\n    this.save_result.age = 0;\n    this.save_result.gender = \"\";\n    this.save_result.chosen_file = \"\";\n    this.save_result.recorded_result = [];\n  }\n\n  async StartTest() {\n    this.start_button_disable = true;\n    this.user_file_index = Math.floor(Math.random() * 10)+1;\n    //this.user_file_index = 1;\n    this.user_file_path = \"../assets/json/file\"+this.user_file_index+\".json\";\n    this.save_result.chosen_file = \"file\"+this.user_file_index+\".json\";\n    console.log(this.user_file_path);\n    console.log(\"1\");\n    this.httpClient.get(this.user_file_path).subscribe(data =>{\n      this.orders = data;\n      console.log(this.orders);\n      this.src_video_path1=\"../assets/videos/\"+this.orders[this.file_index].first_A;\n      this.src_video_path2=\"../assets/videos/\"+this.orders[this.file_index].second_B;\n    })\n\n  }\n\n  FinishTraining() {\n    this.hide_testing_session = false;\n    this.hide_training_session = true;\n  }\n\n  JumpTo() {\n    if (this.userchoice === \"\"){\n      this.hide_switch = false;\n      //this.alertService.error(\"Try again!\");\n      //this.router.navigate(['/iloveu']);\n    }else{\n      this.hide_switch = true;\n\n      this.save_result.recorded_result.push(new result());\n      this.save_result.recorded_result[this.file_index].id = this.file_index;\n      this.save_result.recorded_result[this.file_index].choice = this.userchoice;\n\n      this.file_index = this.file_index + 1;\n\n      if (this.file_index === 12){\n        console.log(this.save_result);\n        this.hide_testing_session = true;\n        this.hide_save_session = false;\n\n      }else{\n        this.userchoice = null;\n        this.src_video_path1=\"../assets/videos/\"+this.orders[this.file_index].first_A;\n        this.src_video_path2=\"../assets/videos/\"+this.orders[this.file_index].second_B;\n      }\n      //this.Ifvalid = false;\n      //this.alertService.error(\"Try again!\");\n    }\n  }\n\n  get dataUri(): SafeUrl {\n    const jsonData = JSON.stringify(this.save_result);\n    const uri = 'data:application/json;charset=UTF-8,' + encodeURIComponent(jsonData);\n    return this.sanitizer.bypassSecurityTrustUrl(uri);\n  }\n\n}\n","export class result {\n    id: number;\n    choice: string;\n  }\n\nexport class result_all {\n    name: string;\n    age: number;\n    gender: string;\n    chosen_file: string;\n    recorded_result: result[];\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}